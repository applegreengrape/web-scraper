package main

import (
	"strings"
	"time"
	"net/http"
	"fmt"
	"github.com/mmcdole/gofeed"
	"github.com/PuerkitoBio/goquery"
	"gopkg.in/jdkato/prose.v2"
)

func feed(i int) (url string, title string){

	fp := gofeed.NewParser()
	
	feed, err := fp.ParseURL("http://feeds.reuters.com/reuters/UKTopNews")
	
	if err != nil {
		panic(err)
	}

	title = fmt.Sprintf(feed.Items[i].Title)

	url = fmt.Sprintf(feed.Items[i].Link)

	return url, title

}

func getContent(i int)(content string, url string, title string){
	
	url, title = feed(i)

	req, err := http.NewRequest("GET",url, nil)
		if err != nil {}

  	client := &http.Client{Timeout: time.Second * 10}
	
	resp, err := client.Do(req)
	if err != nil { fmt.Println("req err")}

	doc, err := goquery.NewDocumentFromReader(resp.Body)
  	if err != nil {}

	s:= fmt.Sprintf(doc.Find(".StandardArticleBody_container").Text())
	
	return s, url, title
}

func main(){
	var v string
	v = "June"

	for i:= 0; i < 1; i++ {

	s, url, title := getContent(i)

		fmt.Println(s)
		fmt.Println()
		fmt.Println(title)
		fmt.Println(url)

	doc, err := prose.NewDocument(s)
	if err != nil {}
	
	// Iterate over the doc's named-entities:
    for _, ent := range doc.Sentences() {

		if strings.Contains(ent.Text, v){

			fmt.Println("[==========>]",ent.Text)
		}
	  }
    }
}
